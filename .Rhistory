data$Date <- as.Date(strptime(data$Date, "%d/%m/%Y"))
library(dplyr)
summarise(data)
summarise(data[1, ])
summarise(data[, 1])
head(data$Time)
data$Time[1]
class(data$Time)
class(data$Date)
strptime(date$Time[1], "%H:%M:%S")
strptime(data$Time[1], "%H:%M:%S")
x <- c("h", "m", "d")
y <- c("i", "y", "ude")
paste(x, y, sep="")
data <- read.table(dir()[1], header=TRUE, sep=";")
class(data$Date)
head(data)
head(paste(data$Date, data$Time))
data$Date <- paste(data$Date, data$Time)
head(data)
class(data)
colnames(data)[1] <- “Date_time”
colnames(data$Date) <- “Date_time”
head(data)
?colnames
head(data)
colnames(data) <- c("Data_time", names(data)[2:length(names(data))])
head(data)
head(data[,-"Time"])
head(data[,-c("Time")])
head(data[,names(data)])
1:9
1:9 -2
1:9-2
1:9 == 2
1:9[!1:9 == 2]
1:9[!(1:9 == 2)]
(1:9)[!(1:9 == 2)]
head(data[, !(names(data) %in% "Time")])
data <- read.table(dir()[1], header=TRUE, sep=";")
data <- data[, !(names(data) %in% "Time")]
colnames(data) <- c("Data_time", names(data)[2:length(names(data))])
head(data)
data <- read.table(dir()[1], header=TRUE, sep=";")
## Combine the "Date" and "Time" columns to have one "Date_time" column
## of the Date class.
data$Date <- paste(data$Date, data$Time)
data <- data[, !(names(data) %in% "Time")]
colnames(data) <- c("Data_time", names(data)[2:length(names(data))])
head(data)
data$Data_time <- as.Date(strptime(data$Data_time, "%d/%m/%Y %T"))
head(data)
class(data$Data_time)
data$Data_time
data <- read.table(dir()[1], header=TRUE, sep=";")
## Convert the "Date" column to a Date class.
data$Date <- as.Date(strptime(data$Data, "%d/%m/%Y"))
data <- read.table(dir()[1], header=TRUE, sep=";")
data$Date <- as.Date(strptime(data$Date, "%d/%m/%Y"))
class(data$Date)
data$Date
"?"
data <- read.table(dir()[1], header=TRUE, sep=";", na.strings="?")
head(data)
data
data <- read.table(dir()[1], header=TRUE, sep=";", na.strings="?")
head(data)
head(subset(data, Date == "01/02/2007"))
head(subset(data, Date == "1/2/2007"))
head(subset(data, Date %in% c("1/2/2007", "2/2/2007")))
data <- read.table(dir()[1], header=TRUE, sep=";", na.strings="?")
## Subset the overall dataset to just include the rows with the dates:
## 2007-02-01 and 2007-02-02
data <- subset(data, Date %in% c("1/2/2007", "2/2/2007"))
## Convert the "Date" column to a Date class.
data$Date <- as.Date(strptime(data$Date, "%d/%m/%Y"))
head(data)
rownames(data) <- NULL
head(data)
setwd("Coursera/DataScience/Exploratory_Data_Analysis/Project1")
dir()
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";")
dev.cur()
with(data, hist(Date))
hist(data$Global_active_power, col="red", xlab="Global Active Power (kilowatts)", ylab="Frequency", main="Global Active Power")
class(data$Global_active_power)
head(data$Global_active_power)
head(data)
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?")
## Subset the entire dataset to just the rows that have the dates
## 2007-02-01 and 2007-02-02.
data <- subset(data, Date %in% c("1/2/2007", "2/2/2007"))
## Reset the row indices.
rownames(data) <- NULL
## Combine the "Date" and "Time" columns to have one "Date_time" column
## of the Date class.
data$Date <- paste(data$Date, data$Time)
data <- data[, !(names(data) %in% "Time")]
colnames(data) <- c("Date_time", names(data)[2:length(names(data))])
## Convert the "Global_active_power" column to numeric.
data$Global_active_power <- as.numeric(data$Global_active_power)
## Convert the "Global_reactive_power" column to numeric.
data$Global_reactive_power <- as.numeric(data$Global_reactive_power)
## Convert the "Voltage" column to numeric.
data$Voltage <- as.numeric(data$Voltage)
## Convert the "Global_intensity" column to numeric.
data$Global_intensity <- as.numeric(data$Global_intensity)
## Convert the "Sub_metering_1" column to numeric.
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
## Convert the "Sub_metering_2" column to numeric.
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
## Convert the "Sub_metering_3" column to numeric.
data$Sub_metering_3 <- as.numeric(data$Sub_metering_3)
hist(data$Global_active_power, col="red", xlab="Global Active Power (kilowatts)", ylab="Frequency", main="Global Active Power")
source("~/Coursera/DataScience/Exploratory_Data_Analysis/Project1/plot1.R")
dev.cur()
?png
hist(data$Global_active_power, col="red", xlab="Global Active Power (kilowatts)", ylab="Frequency", main="Global Active Power")
rug()
rug(data)
rug(data$Global_active_power)
plot(, type = “l” )
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?")
data <- subset(data, Date %in% c("1/2/2007", "2/2/2007"))
rownames(data) <- NULL
## Convert the "Date" column to the Date class.
data$Date <- as.Date(strptime(data$Date, "%d/%m/%Y"))
## Convert the "Global_active_power" column to numeric.
data$Global_active_power <- as.numeric(data$Global_active_power)
plot(data$Date,
data$Global_active_power,
type="l",
col="black",
xlab="Date",
ylab="Global Active Power (kilowatts)")
plot(data$Date,
data$Global_active_power,
type="l",
col="black",
ylab="Global Active Power (kilowatts)")
plot(data$Date,
data$Global_active_power,
type="l",
col="black",
ylab="Global Active Power (kilowatts)")
plot(data$Date,
data$Global_active_power,
type="l",
col="black",
xlab="",
ylab="Global Active Power (kilowatts)")
plot(data$Date,
data$Global_active_power,
col="black",
xlab="",
ylab="Global Active Power (kilowatts)")
plot(data$Date,
data$Global_active_power,
col="black",
xlab="",
ylab="Global Active Power (kilowatts)")
## Read in data txt file as table (it will read in the entire dataset
## (2,075,259 rows and 9 columns), so ensure you have enough memory space).
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?")
## Subset the entire dataset to just the rows that have the dates
## 2007-02-01 and 2007-02-02.
data <- subset(data, Date %in% c("1/2/2007", "2/2/2007"))
## Reset the row indices.
rownames(data) <- NULL
## Combine the "Date" and "Time" columns to have one "Date_time" column
## of the Date class.
data$Date <- paste(data$Date, data$Time)
data <- data[, !(names(data) %in% "Time")]
colnames(data) <- c("Date_time", names(data)[2:length(names(data))])
## Convert the "Global_active_power" column to numeric.
data$Global_active_power <- as.numeric(data$Global_active_power)
plot(data$Date_time,
data$Global_active_power,
col="black",
xlab="",
ylab="Global Active Power (kilowatts)")
plot(data$Date_time,
data$Global_active_power,
col="black",
xlab="",
ylab="Global Active Power (kilowatts)", )
plot(data$Date_time,
data$Global_active_power,
col="black",
xlab="",
ylab="Global Active Power (kilowatts)",
xlim=as.Date(c("2007-02-01 00:00:00", "2007-02-02 23:59:59")))
plot(data$Date_time,
data$Global_active_power,
col="black",
xlab="",
ylab="Global Active Power (kilowatts)",
xlim=as.Date(c("2007-02-01 00:00:00", "2007-02-02 23:00:00")))
data$Date_time
range(data$Date_time)
head(data)
data$Date <- as.Date(strptime(data$Date, "%d/%m/%Y %T"))
head(data)
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?")
## Subset the entire dataset to just the rows that have the dates
## 2007-02-01 and 2007-02-02.
data <- subset(data, Date %in% c("1/2/2007", "2/2/2007"))
## Reset the row indices.
rownames(data) <- NULL
## Combine the "Date" and "Time" columns to have one "Date_time" column
## of the Date class.
data$Date <- paste(data$Date, data$Time)
data <- data[, !(names(data) %in% "Time")]
colnames(data) <- c("Date_time", names(data)[2:length(names(data))])
data$Date_time <- as.Date(strptime(data$Date, "%d/%m/%Y %T"))
## Convert the "Global_active_power" column to numeric.
data$Global_active_power <- as.numeric(data$Global_active_power)
plot(data$Date_time,
data$Global_active_power,
col="black",
xlab="",
ylab="Global Active Power (kilowatts)")
head(data$Date_time)
head(data$Date_time[1])
data <- subset(data, Date %in% c("1/2/2007", "2/2/2007"))
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?")
head(data)
data <- subset(data, Date %in% c("1/2/2007", "2/2/2007"))
## Reset the row indices.
rownames(data) <- NULL
head(data)
data$Date <- paste(data$Date, data$Time)
head(data)
data <- data[, !(names(data) %in% "Time")]
head(data)
colnames(data) <- c("Date_time", names(data)[2:length(names(data))])
head(data)
strptime(data$Date, "%d/%m/%Y %T")
class(strptime(data$Date, "%d/%m/%Y %T"))
head(as.Date(strptime(data$Date, "%d/%m/%Y %T")))
head(as.Time(strptime(data$Date, "%d/%m/%Y %T")))
data$Date_time <- strptime(data$Date, "%d/%m/%Y %T")
head(data)
plot(data$Date_time,
data$Global_active_power,
col="black",
xlab="",
ylab="Global Active Power (kilowatts)")
plot(data$Date_time,
data$Global_active_power,
col="black",
xlab="",
ylab="Global Active Power (kilowatts)")
plot(data$Date_time,
data$Global_active_power,
type="l"
col="black",
xlab="",
ylab="Global Active Power (kilowatts)")
plot(data$Date_time,
data$Global_active_power,
type="l",
col="black",
xlab="",
ylab="Global Active Power (kilowatts)")
class(data$Date_time)
## Convert the "Sub_metering_1" column to numeric.
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
## Convert the "Sub_metering_2" column to numeric.
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
## Convert the "Sub_metering_3" column to numeric.
data$Sub_metering_3 <- as.numeric(data$Sub_metering_3)
plot(data$Date_time,
data$Sub_metering_1,
type = "n",
xlab="",
ylab="Energy sub metering")
lines(data$Date_time,
data$Sub_metering_1,
col="black")
lines(data$Date_time,
data$Sub_metering_2,
col="red")
lines(data$Date_time,
data$Sub_metering_3,
col="blue")
legend("topright",
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$Date_time,
data$Sub_metering_1,
type = "n",
xlab="",
ylab="Energy sub metering")
lines(data$Date_time,
data$Sub_metering_1,
col="black")
lines(data$Date_time,
data$Sub_metering_2,
col="red")
lines(data$Date_time,
data$Sub_metering_3,
col="blue")
legend("topright",
lty="solid",
lwd="1",
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
data <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?")
data <- subset(data, Date %in% c("1/2/2007", "2/2/2007"))
rownames(data) <- NULL
data$Date <- paste(data$Date, data$Time)
data <- data[, !(names(data) %in% "Time")]
colnames(data) <- c("Date_time", names(data)[2:length(names(data))])
data$Date_time <- strptime(data$Date, "%d/%m/%Y %T")
## Convert the "Global_active_power" column to numeric.
data$Global_active_power <- as.numeric(data$Global_active_power)
## Convert the "Global_reactive_power" column to numeric.
data$Global_reactive_power <- as.numeric(data$Global_reactive_power)
## Convert the "Voltage" column to numeric.
data$Voltage <- as.numeric(data$Voltage)
## Convert the "Sub_metering_1" column to numeric.
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
## Convert the "Sub_metering_2" column to numeric.
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
## Convert the "Sub_metering_3" column to numeric.
data$Sub_metering_3 <- as.numeric(data$Sub_metering_3)
par(mfrow = c(2, 2))
## The first plot is the line plot: Time versus Global Active Power.
plot(data$Date_time,
data$Global_active_power,
type="l",
col="black",
xlab="",
ylab="Global Active Power")
## The second plot consits of three line plots of Time versus
## Energy sub metering, with all three sub metering plots on
## the same graph, and with a legend.
plot(data$Date_time,
data$Sub_metering_1,
type = "n",
xlab="",
ylab="Energy sub metering")
lines(data$Date_time,
data$Sub_metering_1,
col="black")
lines(data$Date_time,
data$Sub_metering_2,
col="red")
lines(data$Date_time,
data$Sub_metering_3,
col="blue")
legend("topright",
lty="solid",
lwd="1",
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## The third plot is the line plot: Time versus Voltage.
plot(data$Date_time,
data$Voltage,
type="l",
col="black",
xlab="datetime",
ylab="Voltage")
## The fourth plot is the line plot: Time versus Global Reactive Power.
plot(data$Date_time,
data$Global_reactive_power,
type="l",
col="black",
xlab="datetime",
ylab="Global_reactive_power")
par(mfrow = c(2, 2))
## The first plot is the line plot: Time versus Global Active Power.
plot(data$Date_time,
data$Global_active_power,
type="l",
col="black",
xlab="",
ylab="Global Active Power")
## The second plot consits of three line plots of Time versus
## Energy sub metering, with all three sub metering plots on
## the same graph, and with a legend.
plot(data$Date_time,
data$Sub_metering_1,
type = "n",
xlab="",
ylab="Energy sub metering")
lines(data$Date_time,
data$Sub_metering_1,
col="black")
lines(data$Date_time,
data$Sub_metering_2,
col="red")
lines(data$Date_time,
data$Sub_metering_3,
col="blue")
legend("topright",
lty="solid",
lwd="1",
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## The third plot is the line plot: Time versus Voltage.
plot(data$Date_time,
data$Voltage,
type="l",
col="black",
xlab="datetime",
ylab="Voltage")
## The fourth plot is the line plot: Time versus Global Reactive Power.
plot(data$Date_time,
data$Global_reactive_power,
type="l",
col="black",
xlab="datetime",
ylab="Global_reactive_power")
par(mfrow = c(2, 2))
## The first plot is the line plot: Time versus Global Active Power.
plot(data$Date_time,
data$Global_active_power,
type="l",
col="black",
xlab="",
ylab="Global Active Power")
## The second plot is the line plot: Time versus Voltage.
plot(data$Date_time,
data$Voltage,
type="l",
col="black",
xlab="datetime",
ylab="Voltage")
## The third plot consits of three line plots of Time versus
## Energy sub metering, with all three sub metering plots on
## the same graph, and with a legend.
plot(data$Date_time,
data$Sub_metering_1,
type = "n",
xlab="",
ylab="Energy sub metering")
lines(data$Date_time,
data$Sub_metering_1,
col="black")
lines(data$Date_time,
data$Sub_metering_2,
col="red")
lines(data$Date_time,
data$Sub_metering_3,
col="blue")
legend("topright",
lty="solid",
lwd="1",
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## The fourth plot is the line plot: Time versus Global Reactive Power.
plot(data$Date_time,
data$Global_reactive_power,
type="l",
col="black",
xlab="datetime",
ylab="Global_reactive_power")
par(mfrow = c(2, 2))
## The first plot is the line plot: Time versus Global Active Power.
plot(data$Date_time,
data$Global_active_power,
type="l",
col="black",
xlab="",
ylab="Global Active Power")
## The second plot is the line plot: Time versus Voltage.
plot(data$Date_time,
data$Voltage,
type="l",
col="black",
xlab="datetime",
ylab="Voltage")
## The third plot consits of three line plots of Time versus
## Energy sub metering, with all three sub metering plots on
## the same graph, and with a legend.
plot(data$Date_time,
data$Sub_metering_1,
type = "n",
xlab="",
ylab="Energy sub metering")
lines(data$Date_time,
data$Sub_metering_1,
col="black")
lines(data$Date_time,
data$Sub_metering_2,
col="red")
lines(data$Date_time,
data$Sub_metering_3,
col="blue")
legend("topright",
lty="solid",
lwd="1",
bty="n",
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## The fourth plot is the line plot: Time versus Global Reactive Power.
plot(data$Date_time,
data$Global_reactive_power,
type="l",
col="black",
xlab="datetime",
ylab="Global_reactive_power")
?download.file
tempfile()
?unlink
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
"household_power_consumption.zip",
"curl")
unz("household_power_consumption.zip", "household_power_consumption.txt")
unzip("household_power_consumption.zip", "household_power_consumption.txt")
